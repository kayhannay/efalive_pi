# This is an example plymouth plugin script

# Load the image of a efalive
efalive_image = Image("efaLive.png");

# Create a sprite of the efalive
#efalive_sprite = Sprite(efalive_image);

# Add your code here

screen_ratio = Window.GetHeight() / Window.GetWidth();
efalive_image_ratio = efalive_image.GetHeight() / efalive_image.GetWidth();

if (screen_ratio > efalive_image_ratio)
  {  # Screen ratio is taller than image ratio, we will match the screen height
     scale_factor =  Window.GetHeight() / efalive_image.GetHeight();
  }
else
  {  # Screen ratio is wider than image ratio, we will match the screen width
     scale_factor =  Window.GetWidth() / efalive_image.GetWidth();
  }

scaled_efalive_image = efalive_image.Scale(efalive_image.GetWidth()  * scale_factor,
                                          efalive_image.GetHeight() * scale_factor);
efalive_sprite = Sprite(scaled_efalive_image); # Create the a sprite using the scaled image

efalive_sprite.SetX(Window.GetWidth()  / 2 - scaled_efalive_image.GetWidth () / 2); # Place in the centre
efalive_sprite.SetY(Window.GetHeight() / 2 - scaled_efalive_image.GetHeight() / 2);
efalive_sprite.SetZ(-10000); # Place right at the back
efalive_sprite.SetOpacity(1);





#opacity = 0.0;
throttle = 1;
counter = 0;

animation_sprite = Sprite();
animation_image = Image("throbber-00.png");
animation_x = Window.GetWidth()  / 2 - animation_image.GetWidth () / 2;
animation_y = Window.GetHeight() / 2 - animation_image.GetHeight() / 2;
animation_sprite.SetX(animation_x);
animation_sprite.SetY(animation_y);
fun refresh_callback ()
  {
    # Currently we do nothing here
    throttle++;
    if (throttle > 5)
    {
        throttle = 1;
        if (counter < 10) 
        {
            zero = "0";
        }
        else
        {
            zero = "";
        }
        animation_image = Image("throbber-" + zero + counter++ + ".png");
        animation_sprite.SetImage(animation_image);
        if (counter > 33)
        {
            counter = 0;
        }
    } 
  }
  
Plymouth.SetRefreshFunction (refresh_callback);

#----------------------------------------- Dialogue --------------------------------

status = "normal";

fun dialog_setup()
  {
    local.box;
    local.lock;
    local.entry;
    
    box.image = Image("box.png");
    lock.image = Image("lock.png");
    entry.image = Image("entry.png");
    
    box.sprite = Sprite(box.image);
    box.x = Window.GetWidth()  / 2 - box.image.GetWidth ()/2;
    box.y = Window.GetHeight() / 2 - box.image.GetHeight()/2;
    box.z = 10000;
    box.sprite.SetPosition(box.x, box.y, box.z);
    
    lock.sprite = Sprite(lock.image);
    lock.x = box.x + box.image.GetWidth()/2 - (lock.image.GetWidth() + entry.image.GetWidth()) / 2;
    lock.y = box.y + box.image.GetHeight()/2 - lock.image.GetHeight()/2;
    lock.z = box.z + 1;
    lock.sprite.SetPosition(lock.x, lock.y, lock.z);
    
    entry.sprite = Sprite(entry.image);
    entry.x = lock.x + lock.image.GetWidth();
    entry.y = box.y + box.image.GetHeight()/2 - entry.image.GetHeight()/2;
    entry.z = box.z + 1;
    entry.sprite.SetPosition(entry.x, entry.y, entry.z);
    
    global.dialog.box = box;
    global.dialog.lock = lock;
    global.dialog.entry = entry;
    global.dialog.bullet_image = Image("bullet.png");
    dialog_opacity (1);
  }
    
fun dialog_opacity(opacity)
  {
    dialog.box.sprite.SetOpacity (opacity);
    dialog.lock.sprite.SetOpacity (opacity);
    dialog.entry.sprite.SetOpacity (opacity);
    for (index = 0; dialog.bullet[index]; index++)
      {
        dialog.bullet[index].sprite.SetOpacity(opacity);
      }
  }

fun display_normal_callback ()
  {
    global.status = "normal";
    if (global.dialog)
      dialog_opacity (0);
  }

fun display_password_callback (prompt, bullets)
  {
    global.status = "password";
    if (!global.dialog)
	dialog_setup();
    else
	dialog_opacity(1);
    for (index = 0; dialog.bullet[index] || index < bullets; index++)
      {
        if (!dialog.bullet[index])
          {
            dialog.bullet[index].sprite = Sprite(dialog.bullet_image);
            dialog.bullet[index].x = dialog.entry.x + index * dialog.bullet_image.GetWidth();
            dialog.bullet[index].y = dialog.entry.y + dialog.entry.image.GetHeight() / 2 - dialog.bullet_image.GetHeight() / 2;
            dialog.bullet[index].z = dialog.entry.z + 1;
            dialog.bullet[index].sprite.SetPosition(dialog.bullet[index].x, dialog.bullet[index].y, dialog.bullet[index].z);
          }
        if (index < bullets)
          dialog.bullet[index].sprite.SetOpacity(1);
        else
          dialog.bullet[index].sprite.SetOpacity(0);
      }
  }

Plymouth.SetDisplayNormalFunction(display_normal_callback);
Plymouth.SetDisplayPasswordFunction(display_password_callback);

#----------------------------------------- Progress Bar --------------------------------

#progress_box.image = Image("progress_box.png");
#progress_box.sprite = Sprite(progress_box.image);

#progress_box.x = Window.GetWidth()  / 2 -    progress_box.image.GetWidth()  / 2;
#progress_box.y = Window.GetHeight() * 0.75 - progress_box.image.GetHeight() / 2;
#progress_box.sprite.SetPosition(progress_box.x, progress_box.y, 0);

#progress_bar.original_image = Image("progress_bar.png");
#progress_bar.sprite = Sprite();

#progress_bar.x = 0; #Window.GetWidth()  / 2 -        progress_bar.original_image.GetWidth() / 2;
#progress_bar.y = Window.GetHeight() - progress_bar.original_image.GetHeight();
#progress_bar.sprite.SetPosition(progress_bar.x, progress_bar.y, 1);

#progSprite = Sprite();
#progSprite.SetPosition(10, 40, 10000);

#screen_width = Window.GetWidth();

fun progress_callback (duration, progress)
  {
    #progMsg = Image.Text(progress, 0, 0, 0);
    #progSprite.SetImage(progMsg);
    
    #progress_bar.image = progress_bar.original_image.Scale(progress * screen_width, progress_bar.original_image.GetHeight());
    #progress_bar.sprite.SetImage(progress_bar.image);

    #if (progress_bar.image.GetWidth () != Math.Int (progress_bar.original_image.GetWidth () * progress))
    #  {
    #    progress_bar.image = progress_bar.original_image.Scale(progress_bar.original_image.GetWidth(progress_bar.original_image) * progress, progress_bar.original_image.GetHeight());
    #    progress_bar.sprite.SetImage (progress_bar.image);
    #  }
  }

Plymouth.SetBootProgressFunction(progress_callback);

#----------------------------------------- Quit --------------------------------

fun quit_callback ()
{
}

Plymouth.SetQuitFunction(quit_callback);

#----------------------------------------- Message --------------------------------

message_sprite = Sprite();
message_sprite.SetPosition(10, 10, 10000);

fun message_callback (text)
{
  my_image = Image.Text(text, 1, 0, 0);
  message_sprite.SetImage(my_image);
}

Plymouth.SetMessageFunction(message_callback);
